
/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2023 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
/* Include all behaviour includes needed */
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/* Automatically generated layer name #define */
#define LAYER_Base 0
#define LAYER_Nav 1
#define LAYER_Symbol 2
#define LAYER_Num_fn 3
#define LAYER_Magic 4

/* To deal with the situation where there is no Lower layer, to keep &lower happy */
#ifndef LAYER_Lower
#define LAYER_Lower 0
#endif

/* Custom Device-tree */
&sk {
    release-after-ms = <2000>;
    quick-release;
};

&lt {
  flavor = "balanced";
};


/* Glove80 system behavior & macros */
/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: lower {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LAYER_Lower>, <&to LAYER_Lower>;
        };
    };
};

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
    };
};


/ {
#ifdef BT_DISC_CMD
    behaviors {
        bt_0: bt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_0>, <&bt BT_DISC 0>;
        };
        bt_1: bt_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_1>, <&bt BT_DISC 1>;
        };
        bt_2: bt_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_2>, <&bt BT_DISC 2>;
        };
        bt_3: bt_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_3>, <&bt BT_DISC 3>;
        };
    };
    macros {
        bt_select_0: bt_select_0 {
            label = "BT_SELECT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_select_1: bt_select_1 {
            label = "BT_SELECT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_select_2: bt_select_2 {
            label = "BT_SELECT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_select_3: bt_select_3 {
            label = "BT_SELECT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
#else
    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
#endif
};

/ {
    behaviors {
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };
};

/* #define for key positions */
#define POS_LH_T1 52
#define POS_LH_T2 53
#define POS_LH_T3 54
#define POS_LH_T4 69
#define POS_LH_T5 70
#define POS_LH_T6 71
#define POS_LH_C1R2 15
#define POS_LH_C1R3 27
#define POS_LH_C1R4 39
#define POS_LH_C1R5 51
#define POS_LH_C2R1 4
#define POS_LH_C2R2 14
#define POS_LH_C2R3 26
#define POS_LH_C2R4 38
#define POS_LH_C2R5 50
#define POS_LH_C2R6 68
#define POS_LH_C3R1 3
#define POS_LH_C3R2 13
#define POS_LH_C3R3 25
#define POS_LH_C3R4 37
#define POS_LH_C3R5 49
#define POS_LH_C3R6 67
#define POS_LH_C4R1 2
#define POS_LH_C4R2 12
#define POS_LH_C4R3 24
#define POS_LH_C4R4 36
#define POS_LH_C4R5 48
#define POS_LH_C4R6 66
#define POS_LH_C5R1 1
#define POS_LH_C5R2 11
#define POS_LH_C5R3 23
#define POS_LH_C5R4 35
#define POS_LH_C5R5 47
#define POS_LH_C5R6 65
#define POS_LH_C6R1 0
#define POS_LH_C6R2 10
#define POS_LH_C6R3 22
#define POS_LH_C6R4 34
#define POS_LH_C6R5 46
#define POS_LH_C6R6 64
#define POS_RH_T1 57
#define POS_RH_T2 56
#define POS_RH_T3 55
#define POS_RH_T4 74
#define POS_RH_T5 73
#define POS_RH_T6 72
#define POS_RH_C1R2 16
#define POS_RH_C1R3 28
#define POS_RH_C1R4 40
#define POS_RH_C1R5 58
#define POS_RH_C2R1 5
#define POS_RH_C2R2 17
#define POS_RH_C2R3 29
#define POS_RH_C2R4 41
#define POS_RH_C2R5 59
#define POS_RH_C2R6 75
#define POS_RH_C3R1 6
#define POS_RH_C3R2 18
#define POS_RH_C3R3 30
#define POS_RH_C3R4 42
#define POS_RH_C3R5 60
#define POS_RH_C3R6 76
#define POS_RH_C4R1 7
#define POS_RH_C4R2 19
#define POS_RH_C4R3 31
#define POS_RH_C4R4 43
#define POS_RH_C4R5 61
#define POS_RH_C4R6 77
#define POS_RH_C5R1 8
#define POS_RH_C5R2 20
#define POS_RH_C5R3 32
#define POS_RH_C5R4 44
#define POS_RH_C5R5 62
#define POS_RH_C5R6 78
#define POS_RH_C6R1 9
#define POS_RH_C6R2 21
#define POS_RH_C6R3 33
#define POS_RH_C6R4 45
#define POS_RH_C6R5 63
#define POS_RH_C6R6 79

/* Custom Defined Behaviors */
/ {
    macros {
  copy: copy {
      label = "copy";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LGUI>
          , <&macro_tap &kp C>
          , <&macro_release &kp LGUI>
          ;
  };

  cut: cut {
      label = "cut";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LGUI>
          , <&macro_tap &kp X>
          , <&macro_release &kp LGUI>
          ;
  };

  paste: paste {
      label = "paste";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LGUI>
          , <&macro_tap &kp V>
          , <&macro_release &kp LGUI>
          ;
  };

  undo: undo {
      label = "undo";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LGUI>
          , <&macro_tap &kp Z>
          , <&macro_release &kp LGUI>
          ;
  };

  cmd_tab: cmd_tab {
    label = "cmd_tab";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LGUI>
        , <&macro_tap &kp TAB>
        , <&macro_tap &skq LGUI>
        , <&macro_release &kp LGUI>
        ;
  };

  tab_same_app: tab_same_app {
    label = "tab_same_app";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LGUI>
        , <&macro_tap &kp GRAVE>
        , <&macro_tap &skq LGUI>
        , <&macro_release &kp LGUI>
        ;
  };

  find: find {
    label = "find";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LGUI>
        , <&macro_tap &kp F>
        , <&macro_release &kp LGUI>
        ;
  };

  vsc_open_file: vsc_open_file {
    label = "vsc_open_file";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LGUI>
        , <&macro_tap &kp P>
        , <&macro_release &kp LGUI>
        ;
  };

  vsc_new_tab: vsc_new_tab {
    label = "vsc_new_tab";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LGUI>
        , <&macro_tap &kp N>
        , <&macro_release &kp LGUI>
        ;
  };

  vsc_nxt_occr: vsc_nxt_occr {
    label = "vsc_nxt_occr";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LGUI>
        , <&macro_tap &kp D>
        , <&macro_release &kp LGUI>
        ;
  };

  vsc_del_line: vsc_del_line {
    label = "vsc_del_line";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LGUI>
        , <&macro_press &kp LSHFT>
        , <&macro_tap &kp K>
        , <&macro_release &kp LSHFT>
        , <&macro_release &kp LGUI>
        ;
  };

  vsc_opn_trmnl: vsc_opn_trmnl {
    label = "vsc_opn_trmnl";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp GRAVE>
        , <&macro_release &kp LCTRL>
        ;
  };

  vsc_del_unus_imps:  vsc_del_unus_imps {
    label = "vsc_del_unus_imps";
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LALT>
        , <&macro_press &kp LGUI>
        , <&macro_tap &kp I>
        , <&macro_release &kp LALT>
        , <&macro_release &kp LGUI>
        , <&macro_press &kp LGUI>
        , <&macro_tap &kp K>
        , <&macro_release &kp LGUI>
        ;
  };
};

behaviors {
  skq: sticky_key_quick_release {
    compatible = "zmk,behavior-sticky-key";
    #binding-cells = <1>;
    bindings = <&kp>;
    release-after-ms = <700>;
    quick-release;
    ignore-modifiers;
  };

  vsc_def_impl: vsc_def_impl {
    compatible = "zmk,behavior-mod-morph";
    #binding-cells = <0>;
    bindings = <&kp LG(LA(BACKSLASH))>, <&kp LS(F12)>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };

  close_tab_save: close_tab_save {
    compatible = "zmk,behavior-mod-morph";
    #binding-cells = <0>;
    bindings = <&kp LG(W)>, <&kp LG(S)>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };

  enter_to_nav: enter_to_nav {
    compatible = "zmk,behavior-mod-morph";
    #binding-cells = <0>;
    bindings = <&kp ENTER>, <&to 1>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };

  enter_to_alpha: enter_to_alpha {
    compatible = "zmk,behavior-mod-morph";
    #binding-cells = <0>;
    bindings = <&kp ENTER>, <&to 0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };
};
};

/* Automatically generated macro definitions */
/ {
    macros {
        sel_next_vscode: sel_next_vscode {
            label = "&SEL_NEXT_VSCODE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;


            bindings
                = <&kt LGUI>
                , <&kp D>
                , <&kt LGUI>;
        };
    };
};

/* Automatically generated keymap */
/ {
    keymap {
        compatible = "zmk,keymap";


        layer_Base {
            bindings = <
                &none   &none   &none   &none          &none                                                                             &none      &none    &none    &none   &none
                &none   &none   &none   &none          &none   &none                                                           &none     &none      &none    &none    &none   &none
                &none   &kp Q   &kp W   &kp E          &kp R   &kp T                                                           &kp Y     &kp U      &kp I    &kp O  &kp ESC   &none
                &none   &kp A   &kp S   &kp D          &kp F   &kp G                                                           &kp H     &kp J      &kp K    &kp L    &kp P   &none
                &to 1   &kp Z   &kp X   &kp C          &kp V   &kp B    &sk LSHFT      &none   &none   &none   &none   &sl 3   &kp N     &kp M  &kp COMMA  &kp DOT  &kp TAB   &none
 &magic LAYER_Magic 0   &none   &none   &none  &enter_to_nav          &lt 1 SPACE  &sk LSHFT   &none   &none   &sl 3   &sl 2          &kp BSPC      &none    &none    &none   &none
            >;
        };

        layer_Nav {
            bindings = <
  &none               &none           &none     &none            &none                                                                               &none     &none      &none     &none   &none
  &none               &none           &none     &none            &none          &none                                                      &none     &none     &none      &none     &none   &none
  &none      &vsc_opn_trmnl   &tab_same_app  &cmd_tab  &close_tab_save   &vsc_new_tab                                                  &kp PG_UP  &kp HOME    &kp UP    &kp END   &kp ESC   &none
  &none           &sk LCTRL        &sk LALT  &sk LGUI        &sk LSHFT  &vsc_nxt_occr                                                  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp CAPS   &none
  &to 0  &vsc_del_unus_imps  &vsc_open_file     &find    &vsc_del_line  &vsc_def_impl  &trans   &none   &none   &none   &none  &trans      &undo    &paste     &copy       &cut   &kp TAB   &none
  &none               &none           &none     &none  &enter_to_alpha                 &trans  &trans   &none   &none  &trans  &trans               &trans     &none      &none     &none   &none
            >;
        };

        layer_Symbol {
            bindings = <
 &trans     &trans    &trans     &trans    &trans                                                                         &trans     &trans    &trans     &trans  &trans
 &trans     &trans    &trans     &trans    &trans    &trans                                                     &trans    &trans     &trans    &trans     &trans  &trans
 &trans  &kp PRCNT    &kp LT    &kp SQT    &kp GT   &kp DQT                                                  &kp GRAVE  &kp LBRC   &kp DLLR  &kp RBRC  &kp CARET  &trans
 &trans  &kp UNDER  &kp EXCL  &kp EQUAL  &kp PIPE  &kp AMPS                                                  &kp QMARK  &kp LPAR  &kp COLON  &kp RPAR  &kp TILDE  &trans
 &trans   &kp STAR  &kp BSLH  &kp MINUS  &kp FSLH  &kp PLUS  &trans  &trans  &trans  &trans  &trans  &trans     &kp AT  &kp LBKT   &kp SEMI  &kp RBKT   &kp HASH  &trans
 &trans     &trans    &trans     &trans    &trans            &trans  &trans  &trans  &trans  &trans  &trans               &trans     &trans    &trans     &trans  &trans
            >;
        };

        layer_Num_fn {
            bindings = <
  &none   &none   &none   &none   &none                                                                    &none   &none   &none   &none   &none
  &none   &none   &none   &none   &none    &none                                                   &none   &none   &none   &none   &none   &none
  &none   &none  &kp F7  &kp F8  &kp F9  &kp F12                                                   &none  &kp N7  &kp N8  &kp N9   &none   &none
  &none   &none  &kp F4  &kp F5  &kp F6  &kp F11                                                   &none  &kp N4  &kp N5  &kp N6   &none   &none
  &none   &none  &kp F1  &kp F2  &kp F3  &kp F10  &trans   &none   &none   &none   &none  &trans  &kp N0  &kp N1  &kp N2  &kp N3   &none   &none
  &none   &none   &none   &none  &trans           &trans  &trans   &none   &none  &trans  &trans          &trans   &none   &none   &none   &none
            >;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
  &sys_reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none      &sys_reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };

    };
};
